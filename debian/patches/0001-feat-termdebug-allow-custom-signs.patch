From c9ac539749b6e0b85256c0a645abc660127c9bdf Mon Sep 17 00:00:00 2001
From: Dimitry Ishenko <dimitry.ishenko@gmail.com>
Date: Sun, 6 Jul 2025 18:02:14 -0400
Subject: [PATCH] feat(termdebug): allow custom signs
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

For example, one can do something like this:

```vim
let g:termdebug_config.signs = ["❶", "➋", "➌", "➍", "➎", "➏", "➐", "➑", "➒"]
let g:termdebug_config.sign = "⚫"
```

where the first 9 breakpoint signs will have numbers, and the rest will
be just black circles. Or, one can define as many as 20 circled numbers
provided by the Unicode.
---
 runtime/pack/dist/opt/termdebug/plugin/termdebug.vim | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/runtime/pack/dist/opt/termdebug/plugin/termdebug.vim b/runtime/pack/dist/opt/termdebug/plugin/termdebug.vim
index b6da91a833..9e65daddd4 100644
--- a/runtime/pack/dist/opt/termdebug/plugin/termdebug.vim
+++ b/runtime/pack/dist/opt/termdebug/plugin/termdebug.vim
@@ -1688,7 +1688,9 @@ func s:CreateBreakpoint(id, subid, enabled)
       let hiName = "debugBreakpoint"
     endif
     let label = ''
-    if exists('g:termdebug_config') && has_key(g:termdebug_config, 'sign')
+    if exists('g:termdebug_config') && has_key(g:termdebug_config, 'signs')
+      let label = get(g:termdebug_config.signs, a:id - 1, get(g:termdebug_config, 'sign', ''))
+    elseif exists('g:termdebug_config') && has_key(g:termdebug_config, 'sign')
       let label = g:termdebug_config['sign']
     elseif exists('g:termdebug_config') && has_key(g:termdebug_config, 'sign_decimal')
       let label = printf('%02d', a:id)
-- 
2.43.0

